<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyADO</name>
    </assembly>
    <members>
        <member name="T:MyADO.DBManagerFactory">
            <summary>
            数据库管理工厂类
            </summary>
        </member>
        <member name="M:MyADO.DBManagerFactory.GetSqlDB(System.String)">
            <summary>
            得到sqlserver数据库
            </summary>
            <param name="connString">数据库连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.DBManagerFactory.GetMySqlDB(System.String)">
            <summary>
            得到mysql数据库
            </summary>
            <param name="connString">数据库连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.DBManagerFactory.GetDatabase(System.String,System.String)">
            <summary>
            得到指定的数据库
            </summary>
            <param name="connString">数据库连接字符串</param>
            <param name="providerName">数据库提供者（sqlserver、mysql）</param>
            <returns></returns>
        </member>
        <member name="T:MyADO.IDBOperator">
            <summary>
            通用数据库操作接口
            </summary>
        </member>
        <member name="P:MyADO.IDBOperator.GetConnection">
            <summary>
            得到数据库连接
            </summary>
        </member>
        <member name="P:MyADO.IDBOperator.IsTransaction">
            <summary>
            获取当前是否处于事务处理中
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.Open">
            <summary>
            打开数据库连接
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.Close">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.Dispose">
            <summary>
            关闭连接,释放资源
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.BeginTrans">
            <summary>
            开始一个事务
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.CommitTrans">
            <summary>
            提交一个事务
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.RollbackTrans">
            <summary>
            回滚一个事务
            </summary>
        </member>
        <member name="M:MyADO.IDBOperator.CreateCmd">
            <summary>
            生成Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>
            生成DataAdapter对象
            </summary>
            <param name="cmd">Command对象</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQL(System.String)">
            <summary>
            运行SQL语句,返回受影响的行数
            </summary>
            <param name="sql">SQL语句</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQL(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的SQL语句,返回受影响的行数
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQL(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的SQL语句,返回受影响的行数
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQL(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的SQL语句,返回受影响的行数
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProc(System.String)">
            <summary>
            运行存储过程,返回受影响的行数
            </summary>
            <param name="procName">存储过程名</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的存储过程,返回受影响的行数
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">存储过程参数</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProc(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的存储过程,返回受影响的行数
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的存储过程,返回受影响的行数
            </summary>
            <param name="procName">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLResult(System.String)">
            <summary>
            运行insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">insert,update,delete语句</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLResult(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">带参数的insert,update,delete语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLResult(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">带参数的insert,update,delete语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLResult(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">带参数的insert,update,delete语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProcResult(System.String)">
            <summary>
            运行insert,update,delete类型的存储过程,返回执行结果。其他的一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProcResult(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的insert,update,delete类型的存储过程,返回执行结果。其他的一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">存储过程参数</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProcResult(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的insert,update,delete类型的存储过程,返回执行结果。其他的一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeProcResult(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的insert,update,delete类型的存储过程,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ReturnID(System.String)">
            <summary>
            执行Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">Insert SQL语句</param>
            <returns>当前ID,失败返回-1</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ReturnID(System.String,System.Data.IDataParameter[])">
            <summary>
            执行带参数的Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">带参数的Insert SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>当前ID,失败返回-1</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ReturnID(System.String,System.String[],System.Object[])">
            <summary>
            执行带参数的Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">带参数的Insert SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>当前ID,失败返回-1</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ReturnID(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行带参数的Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">带参数的Insert SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String)">
            <summary>
            执行SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">SQL语句</param>
            <returns>第一行第一列的值</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.Data.IDataParameter[])">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>第一行第一列的值</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.String[],System.Object[])">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>第一行第一列的值</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.Int32)">
            <summary>
            返回SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">SQL语句</param>
            <param name="ColumnI">第几列</param>
            <returns>第一行第ColumnI列的值</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.Int32,System.Data.IDataParameter[])">
            <summary>
            返回带参数的SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="ColumnI">第几列</param>
            <param name="parameterArray">参数数组</param>
            <returns>第一行第ColumnI列的值</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.Int32,System.String[],System.Object[])">
            <summary>
            返回带参数的SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="ColumnI">第几列</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>第一行第ColumnI列的值</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExeSQLScalar(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="ColumnI">第几列</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExistData(System.String)">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">SQL语句</param>
            <returns>有返回true,没有返回false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExistData(System.String,System.Data.IDataParameter[])">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>有返回true,没有返回false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExistData(System.String,System.String[],System.Object[])">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>有返回true,没有返回false</returns>
        </member>
        <member name="M:MyADO.IDBOperator.ExistData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReader(System.String)">
            <summary>
            运行SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">SQL语句</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReader(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReader(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReader(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReaderByProc(System.String)">
            <summary>
            运行存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">存储过程名</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReaderByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReaderByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataReaderByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRow(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到第一行数据
            </summary>
            <param name="sql">SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRow(System.String,System.Data.IDataParameter[])">
            <summary>
            得到第一行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRow(System.String,System.String[],System.Object[])">
            <summary>
            得到第一行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRow(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到第rowIndex行数据
            </summary>
            <param name="sql">SQL语句</param>
            <param name="rowIndex">行索引</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRow(System.String,System.Int32,System.Data.IDataParameter[])">
            <summary>
            得到第rowIndex行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="rowIndex">行索引</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRow(System.String,System.Int32,System.String[],System.Object[])">
            <summary>
            得到第rowIndex行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="rowIndex">行索引</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRowByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行存储过程,得到第一行数据
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRowByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行存储过程,得到第一行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRowByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行存储过程,得到第一行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRowByProc(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行存储过程,得到第rowIndex行数据
            </summary>
            <param name="procName">存储过程名</param>
            <param name="rowIndex">行索引</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRowByProc(System.String,System.Int32,System.Data.IDataParameter[])">
            <summary>
            运行存储过程,得到第rowIndex行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="rowIndex">行索引</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataRowByProc(System.String,System.Int32,System.String[],System.Object[])">
            <summary>
            运行存储过程,得到第rowIndex行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="rowIndex">行索引</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataTable(System.String,System.Data.IDataParameter[])">
            <summary>
            得到DataTable
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataTable(System.String,System.String[],System.Object[])">
            <summary>
            得到DataTable
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataTable(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到DataTable
            </summary>
            <param name="sql">SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataTableByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行存储过程,获取DataTable
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataTableByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行存储过程,获取DataTable
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataTableByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行存储过程,获取DataTable
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataSet(System.String,System.Data.IDataParameter[])">
            <summary>
            得到DataSet
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataSet(System.String,System.String[],System.Object[])">
            <summary>
            得到DataSet
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataSet(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到DataSet
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataSetByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的存储过程,得到DataSet对象
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">存储过程参数</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataSetByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的存储过程,得到DataSet对象
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetDataSetByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的存储过程,得到DataSet对象
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetMaxID(System.String,System.String)">
            <summary>
            得到指定表中的、指定字段的最大数值
            </summary>
            <param name="tableName">数据表名</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.IDBOperator.GetMaxID(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到指定表中的、指定字段的最大数值
            </summary>
            <param name="tableName">数据表名</param>
            <param name="fieldName">字段名</param>
            <param name="whereSQL">参数化查询条件(例如: and Name = @Name )</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="T:MyADO.INullableReader">
            <summary>
            可空数据读取器接口
            </summary>
        </member>
        <member name="M:MyADO.INullableReader.GetBoolean(System.String)">
            <summary>
            获取指定列的布尔值形式的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetByte(System.String)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetChar(System.String)">
            <summary>
            获取指定列的字符值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetDateTime(System.String)">
            <summary>
            获取指定字段的日期和时间数据值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetDecimal(System.String)">
            <summary>
            获取指定字段的固定位置的数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetDouble(System.String)">
            <summary>
            获取指定字段的双精度浮点数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetFloat(System.String)">
            <summary>
            获取指定字段的单精度浮点数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetGuid(System.String)">
            <summary>
            返回指定字段的 GUID 值。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetInt16(System.String)">
            <summary>
            获取指定字段的 16 位有符号整数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetInt32(System.String)">
            <summary>
            获取指定字段的 32 位有符号整数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetInt64(System.String)">
            <summary>
            获取指定字段的 64 位有符号整数值。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetString(System.String)">
            <summary>
            获取指定字段的字符串值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.GetValue(System.String)">
            <summary>
            返回指定字段的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.INullableReader.IsDBNull(System.String)">
            <summary>
            返回是否将指定字段设置为空
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MyADO.NullableDataReader">
            <summary>
            可空数据读取器
            </summary>
        </member>
        <member name="M:MyADO.NullableDataReader.#ctor(System.Data.IDataReader)">
            <summary>
            构造器注入
            </summary>
            <param name="dataReader"></param>
        </member>
        <member name="P:MyADO.NullableDataReader.Depth">
            <summary>
            获取一个值，该值指示当前行的嵌套深度。
            </summary>
        </member>
        <member name="P:MyADO.NullableDataReader.IsClosed">
            <summary>
            获取一个值，该值指示数据读取器是否已关闭。如果数据读取器已关闭，则为 true；否则为 false。
            </summary>
        </member>
        <member name="P:MyADO.NullableDataReader.RecordsAffected">
            <summary>
            通过执行 SQL 语句获取更改、插入或删除的行数。
            如果没有任何行受到影响或语句失败，则为 0；-1 表示 SELECT 语句。
            </summary>
        </member>
        <member name="P:MyADO.NullableDataReader.FieldCount">
            <summary>
            获取当前行中的列数。如果未放在有效的记录集中，则为 0；
            </summary>
        </member>
        <member name="P:MyADO.NullableDataReader.Item(System.String)">
            <summary>
            获取具有指定名称的列。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:MyADO.NullableDataReader.Item(System.Int32)">
            <summary>
            获取位于指定索引处的列。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:MyADO.NullableDataReader.Close">
            <summary>
            关闭IDataReader对象
            </summary>
        </member>
        <member name="M:MyADO.NullableDataReader.NextResult">
            <summary>
            当读取批处理 SQL 语句的结果时，使数据读取器前进到下一个结果。
            如果存在多个行，则为 true；否则为 false。
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.Read">
            <summary>
            使 System.Data.IDataReader 前进到下一条记录。
            如果存在多个行，则为 true；否则为 false。
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetBoolean(System.Int32)">
            <summary>
            获取指定列的布尔值形式的值。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetBoolean(System.String)">
            <summary>
            获取指定列的布尔值形式的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetByte(System.Int32)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetByte(System.String)">
            <summary>
            获取指定列的 8 位无符号整数值。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            从指定的列偏移量将字节流作为数组从给定的缓冲区偏移量开始读入缓冲区。
            返回结果:读取的实际字节数。
            </summary>
            <param name="i">从零开始的列序号</param>
            <param name="fieldOffset">字段中的索引，从该索引位置开始读取操作</param>
            <param name="buffer">要将字节流读入的缓冲区。</param>
            <param name="bufferoffset">开始读取操作的 buffer 索引</param>
            <param name="length">要读取的字节数</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetChar(System.Int32)">
            <summary>
            获取指定列的字符值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetChar(System.String)">
            <summary>
            获取指定列的字符值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            从指定的列偏移量将字符流作为数组从给定的缓冲区偏移量开始读入缓冲区
            </summary>
            <param name="i"></param>
            <param name="fieldoffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetData(System.Int32)">
            <summary>
            返回指定的列序号的 System.Data.IDataReader。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDataTypeName(System.Int32)">
            <summary>
            获取指定字段的数据类型信息
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDataTypeName(System.String)">
            <summary>
            获取指定字段的数据类型信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDateTime(System.Int32)">
            <summary>
            获取指定字段的日期和时间数据值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDateTime(System.String)">
            <summary>
            获取指定字段的日期和时间数据值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetNullableDateTime(System.String)">
            <summary>
            获取指定字段的日期和时间数据值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDecimal(System.Int32)">
            <summary>
            获取指定字段的固定位置的数值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDecimal(System.String)">
            <summary>
            获取指定字段的固定位置的数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDouble(System.Int32)">
            <summary>
            获取指定字段的双精度浮点数
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetDouble(System.String)">
            <summary>
            获取指定字段的双精度浮点数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetFieldType(System.Int32)">
            <summary>
            获取与从 System.Data.IDataRecord.GetValue(System.Int32) 返回的 System.Object 类型对应的System.Type 信息。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetFieldType(System.String)">
            <summary>
            获取与从 System.Data.IDataRecord.GetValue(System.Int32) 返回的 System.Object 类型对应的System.Type 信息。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetFloat(System.Int32)">
            <summary>
            获取指定字段的单精度浮点数
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetFloat(System.String)">
            <summary>
            获取指定字段的单精度浮点数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetGuid(System.Int32)">
            <summary>
            返回指定字段的 GUID 值。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetGuid(System.String)">
            <summary>
            返回指定字段的 GUID 值。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetInt16(System.Int32)">
            <summary>
            获取指定字段的 16 位有符号整数值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetInt16(System.String)">
            <summary>
            获取指定字段的 16 位有符号整数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetInt32(System.Int32)">
            <summary>
            获取指定字段的 32 位有符号整数值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetInt32(System.String)">
            <summary>
            获取指定字段的 32 位有符号整数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetInt64(System.Int32)">
            <summary>
            获取指定字段的 64 位有符号整数值。
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetInt64(System.String)">
            <summary>
            获取指定字段的 64 位有符号整数值。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetName(System.Int32)">
            <summary>
            获取要查找的字段的名称
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetOrdinal(System.String)">
            <summary>
            返回命名字段的索引
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetString(System.Int32)">
            <summary>
            获取指定字段的字符串值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetString(System.String)">
            <summary>
            获取指定字段的字符串值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetValue(System.Int32)">
            <summary>
            返回指定字段的值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetValue(System.String)">
            <summary>
            返回指定字段的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetValues(System.Object[])">
            <summary>
            使用当前记录的列值来填充对象数组
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.IsDBNull(System.Int32)">
            <summary>
            返回是否将指定字段设置为空
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.IsDBNull(System.String)">
            <summary>
            返回是否将指定字段设置为空
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MyADO.NullableDataReader.GetSchemaTable">
            <summary>
            返回一个 System.Data.DataTable，它描述 System.Data.IDataReader 的列元数据。
            </summary>
            <returns></returns>
        </member>
        <member name="T:MyADO.SqlDBOperator">
            <summary>
            实现SQL Server数据库操作
            </summary>
        </member>
        <member name="F:MyADO.SqlDBOperator._conn">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="P:MyADO.SqlDBOperator.GetConnection">
            <summary>
            获取当前SQL Server连接
            </summary>
        </member>
        <member name="F:MyADO.SqlDBOperator.isTransaction">
            <summary>
            获取当前是否处于事务处理中，默认值false
            </summary>
        </member>
        <member name="P:MyADO.SqlDBOperator.IsTransaction">
            <summary>
            获取当前是否处于事务处理中
            </summary>
        </member>
        <member name="F:MyADO.SqlDBOperator._trans">
            <summary>
            事务处理类
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.#ctor(System.String)">
            <summary>
            初始化Connection对象
            </summary>
            <param name="strConnection">数据库连接字符串</param>
        </member>
        <member name="M:MyADO.SqlDBOperator.Open">
            <summary>
            打开连接
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.Close">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.Dispose">
            <summary>
            关闭连接,释放资源
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.BeginTrans">
            <summary>
            开始一个事务
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.CommitTrans">
            <summary>
            提交一个事务
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.RollbackTrans">
            <summary>
            回滚一个事务
            </summary>
        </member>
        <member name="M:MyADO.SqlDBOperator.CreateCmd">
            <summary>
            生成Command对象
            </summary>
            <returns>Command对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.CreateCmd(System.String,System.Boolean)">
            <summary>
            生成Command对象
            </summary>
            <param name="sql">SQL语句或存储过程名</param>
            <param name="isProc">是否存储过程</param>
            <returns>Command对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.CreateCmd(System.String,System.Data.IDataParameter[],System.Boolean)">
            <summary>
            生成Command对象
            </summary>
            <param name="sql">SQL语句或存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <param name="isProc">是否存储过程</param>
            <returns>Command对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.CreateCmd(System.String,System.String[],System.Object[],System.Boolean)">
            <summary>
            生成Command对象
            </summary>
            <param name="sql">SQL语句或存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <param name="isProc">是否存储过程</param>
            <returns>Command对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.CreateCmd(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            生成Command对象
            </summary>
            <param name="sql">SQL语句或存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <param name="isProc">是否存储过程</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.CreateDataAdapter(System.Data.IDbCommand)">
            <summary>
            生成DataAdapter对象
            </summary>
            <param name="cmd">Command对象</param>
            <returns>DataAdapter对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQL(System.String)">
            <summary>
            运行SQL语句,返回受影响的行数
            </summary>
            <param name="sql">SQL语句</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQL(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的SQL语句,返回受影响的行数
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQL(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的SQL语句,返回受影响的行数
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQL(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的SQL语句,返回受影响的行数
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProc(System.String)">
            <summary>
            运行存储过程,返回受影响的行数
            </summary>
            <param name="procName">存储过程名</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的存储过程,返回受影响的行数
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">存储过程参数</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProc(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的存储过程,返回受影响的行数
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的存储过程,返回受影响的行数
            </summary>
            <param name="procName">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLResult(System.String)">
            <summary>
            运行insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">insert,update,delete语句</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLResult(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">带参数的insert,update,delete语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLResult(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">带参数的insert,update,delete语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLResult(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的insert,update,delete语句,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="sql">带参数的insert,update,delete语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProcResult(System.String)">
            <summary>
            运行insert,update,delete类型的存储过程,返回执行结果。其他的一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProcResult(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的insert,update,delete类型的存储过程,返回执行结果。其他的一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">存储过程参数</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProcResult(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的insert,update,delete类型的存储过程,返回执行结果。其他的一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>返回执行结果,成功为true,失败为false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeProcResult(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的insert,update,delete类型的存储过程,返回执行结果。其他的SQL语句一律返回false
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ReturnID(System.String)">
            <summary>
            执行Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">Insert SQL语句</param>
            <returns>当前ID,失败返回-1</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ReturnID(System.String,System.Data.IDataParameter[])">
            <summary>
            执行带参数的Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">带参数的Insert SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>当前ID,失败返回-1</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ReturnID(System.String,System.String[],System.Object[])">
            <summary>
            执行带参数的Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">带参数的Insert SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>当前ID,失败返回-1</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ReturnID(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行带参数的Insert SQL语句返回当前ID
            </summary>
            <param name="strInsert">带参数的Insert SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String)">
            <summary>
            执行SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">SQL语句</param>
            <returns>第一行第一列的值</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.Data.IDataParameter[])">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>第一行第一列的值</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.String[],System.Object[])">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>第一行第一列的值</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            执行带参数的SQL语句返回第一行第一列的值,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.Int32)">
            <summary>
            返回SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">SQL语句</param>
            <param name="ColumnI">第几列</param>
            <returns>第一行第ColumnI列的值</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.Int32,System.Data.IDataParameter[])">
            <summary>
            返回带参数的SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="ColumnI">第几列</param>
            <param name="parameterArray">参数数组</param>
            <returns>第一行第ColumnI列的值</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.Int32,System.String[],System.Object[])">
            <summary>
            返回带参数的SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="ColumnI">第几列</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>第一行第ColumnI列的值</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExeSQLScalar(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            返回带参数的SQL语句执行结果的第一行第ColumnI列,没有数据返回空值
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="ColumnI">第几列</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExistData(System.String)">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">SQL语句</param>
            <returns>有返回true,没有返回false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExistData(System.String,System.Data.IDataParameter[])">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>有返回true,没有返回false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExistData(System.String,System.String[],System.Object[])">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>有返回true,没有返回false</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.ExistData(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            检验是否存在数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReader(System.String)">
            <summary>
            运行SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">SQL语句</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReader(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReader(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReader(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的SQL语句,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReaderByProc(System.String)">
            <summary>
            运行存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">存储过程名</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReaderByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReaderByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataReader对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataReaderByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的存储过程,得到DataReader对象,使用完后显示调用DataReader的Close()方法.
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRow(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到第一行数据
            </summary>
            <param name="sql">SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRow(System.String,System.Data.IDataParameter[])">
            <summary>
            得到第一行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRow(System.String,System.String[],System.Object[])">
            <summary>
            得到第一行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRow(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到第rowIndex行数据
            </summary>
            <param name="sql">SQL语句</param>
            <param name="rowIndex">行索引</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRow(System.String,System.Int32,System.Data.IDataParameter[])">
            <summary>
            得到第rowIndex行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="rowIndex">行索引</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRow(System.String,System.Int32,System.String[],System.Object[])">
            <summary>
            得到第rowIndex行数据
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="rowIndex">行索引</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRowByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行存储过程,得到第一行数据
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRowByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行存储过程,得到第一行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRowByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行存储过程,得到第一行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRowByProc(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行存储过程,得到第rowIndex行数据
            </summary>
            <param name="procName">存储过程名</param>
            <param name="rowIndex">行索引</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRowByProc(System.String,System.Int32,System.Data.IDataParameter[])">
            <summary>
            运行存储过程,得到第rowIndex行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="rowIndex">行索引</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataRowByProc(System.String,System.Int32,System.String[],System.Object[])">
            <summary>
            运行存储过程,得到第rowIndex行数据
            </summary>
            <param name="procName">带参数的存储过程名</param>
            <param name="rowIndex">行索引</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataRow对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataTable(System.String,System.Data.IDataParameter[])">
            <summary>
            得到DataTable
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataTable(System.String,System.String[],System.Object[])">
            <summary>
            得到DataTable
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataTable(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到DataTable
            </summary>
            <param name="sql">SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataTableByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行存储过程,获取DataTable
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataTableByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行存储过程,获取DataTable
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataTableByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行存储过程,获取DataTable
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataTable对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataSet(System.String,System.Data.IDataParameter[])">
            <summary>
            得到DataSet
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="parameterArray">参数数组</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataSet(System.String,System.String[],System.Object[])">
            <summary>
            得到DataSet
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataSet(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到DataSet
            </summary>
            <param name="sql">带参数的SQL语句</param>
            <param name="dict">参数的名/值集合</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataSetByProc(System.String,System.Data.IDataParameter[])">
            <summary>
            运行带参数的存储过程,得到DataSet对象
            </summary>
            <param name="procName">存储过程名</param>
            <param name="parameterArray">存储过程参数</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataSetByProc(System.String,System.String[],System.Object[])">
            <summary>
            运行带参数的存储过程,得到DataSet对象
            </summary>
            <param name="procName">存储过程名</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetDataSetByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            运行带参数的存储过程,得到DataSet对象
            </summary>
            <param name="procName">存储过程名</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetMaxID(System.String,System.String)">
            <summary>
            得到指定表中的、指定字段的最大数值
            </summary>
            <param name="tableName">数据表名</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.GetMaxID(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            得到指定表中的、指定字段的最大数值
            </summary>
            <param name="tableName">数据表名</param>
            <param name="fieldName">字段名</param>
            <param name="whereSQL">参数化查询条件(例如: and Name = @Name )</param>
            <param name="dict">参数的名/值集合</param>
            <returns></returns>
        </member>
        <member name="M:MyADO.SqlDBOperator.AttachParameters(System.Data.IDbCommand,System.Data.IDataParameter[])">
            <summary>
            配属参数到IDbCommand对象
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameterArray">参数数组</param>
        </member>
        <member name="M:MyADO.SqlDBOperator.AttachParameters(System.Data.IDbCommand,System.String[],System.Object[])">
            <summary>
            配属参数到IDbCommand对象
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="paraName">参数名数组</param>
            <param name="paraValue">参数值数组</param>
        </member>
        <member name="M:MyADO.SqlDBOperator.AttachParameters(System.Data.IDbCommand,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            配属参数到IDbCommand对象
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="dict">参数的名/值集合</param>
        </member>
        <member name="M:MyADO.SqlDBOperator.ObjectToInt32(System.Object)">
            <summary>
            转换对象类型为INT类型，失败返回0
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
